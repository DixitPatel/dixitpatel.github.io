<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Distributed Systems on Dixit Patel</title>
    <link>https://dixitpatel.github.io/categories/distributed-systems/</link>
    <description>Recent content in Distributed Systems on Dixit Patel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dixitpatel.github.io/categories/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Distributed Fault-Tolerant Stack</title>
      <link>https://dixitpatel.github.io/2018/07/06/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dixitpatel.github.io/2018/07/06/</guid>
      <description>Github : Distributed Stack in Golang 
Most modern large-scale applications are distributed in nature and are designed around high-availability. A fundamental principle underlying such systems is that failure is inevitable. Having fault-tolerance built-in, essentially helps to mitigate the effects of such failures, which can be very critical depending on nature of the application. In the event of a failure of one or more underlying computer systems, we need a way to have the entire state of the application reach a consistent state before it can continue to operate.</description>
    </item>
    
  </channel>
</rss>