<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Distributed Systems on Dixit Patel</title>
    <link>https://dixitpatel.github.io/categories/distributed-systems/</link>
    <description>Recent content in Distributed Systems on Dixit Patel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://dixitpatel.github.io/categories/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Benchmarking on Google Cloud ML Platform</title>
      <link>https://dixitpatel.github.io/2018/12/24/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dixitpatel.github.io/2018/12/24/</guid>
      <description>Google Cloud provides a very useful ML platform to train machine learning models at large-scale. Being an AWS user for most part, I was intriguied by the overall ecosystem Google provides for machine learning and decided to use the ML platform for one of my course project. The goal was to benchmark different neural network architectures. Here&amp;rsquo;s a small part from our final project report that looked into training Faster-RCNN using multiple GPU&amp;rsquo;s.</description>
    </item>
    
    <item>
      <title>Distributed Stack</title>
      <link>https://dixitpatel.github.io/2018/07/06/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dixitpatel.github.io/2018/07/06/</guid>
      <description>I ocassionally find myself taking some time out and diving into some of the content from this very interesting collection of fairly in-depth and well-written articles, Software is eating the world , exploring, in some sense, the interplay between modern technology and human life post tech hysteria of the early 2000&amp;rsquo;s. Here&amp;rsquo;s my favorite from the intro :  People change, then forget that they changed, and act as though they always behaved a certain way and could never change again.</description>
    </item>
    
  </channel>
</rss>